.content {
  width: 100%;
  padding-top: var(--spacing-xl);
  padding-bottom: var(--spacing-xl);
}

.container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-direction: column;
  /* gap: 5rem; */
  width: 100%;
  max-width: var(--layout-width);
  margin: 0 auto;
  padding-left: var(--spacing-md);
  padding-right: var(--spacing-md);

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    width: 100%;
    margin-block: 0;
  }

  @media (max-width: 767px) {
    gap: var(--spacing-xl);
  }
}

.metrics {
  display: flex;
  align-items: flex-start;
  flex-wrap: wrap;
  gap: var(--spacing-md);
  padding: var(--spacing-md);

  @media (max-width: 767px) {
    flex-direction: column;
  }
}

.metric {
  flex: 1;
}

.metricValue {
  font-size: 2.5rem;
  font-weight: var(--font-weight-bold);
  position: relative;
  z-index: 1;
  color: var(--color-text-primary);

  &:after {
    content: "";
    display: block;
    background-color: var(--color-secondary);
    width: 35px;
    height: 35px;
    position: absolute;
    top: -3px;
    left: -0.5rem;
    z-index: -1;
    border-radius: var(--radius-md);
  }
}

.disclaimer {
  color: var(--color-muted);
  font-size: var(--font-size-sm);
}

.layoutHImageRight {
  flex-direction: row;
  gap: var(--gap, 5rem);

  .heading {
    gap: var(--spacing-md);
    flex: 0.65;
  }

  .image {
    flex: 0.5;
  }

  @media (max-width: 768px) {
    flex-direction: column-reverse;
    gap: var(--spacing-lg);
  }
}

.noImage {
  flex-direction: column;
}

.layoutHImageLeft {
  flex-direction: row-reverse;
  gap: var(--gap, 5rem);

  .heading {
    gap: var(--spacing-md);
    flex: 0.65;
  }

  .image {
    flex: 0.5;
  }

  @media (max-width: 768px) {
    flex-direction: column-reverse;
    gap: var(--spacing-lg);
  }
}

.layoutVImageTop {
  flex-direction: column-reverse;
  gap: var(--gap, var(--spacing-md));

  .heading {
    gap: var(--spacing-md);
  }

  @media (max-width: 768px) {
    gap: var(--spacing-lg);
  }
}

.layoutVImageBottom {
  flex-direction: column;
  gap: var(--gap, var(--spacing-md));

  .heading {
    gap: var(--spacing-md);
  }

  @media (max-width: 768px) {
    gap: var(--spacing-lg);
  }
}

.heading {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: var(--spacing-md);
}

.title {
  flex: 1;
  text-wrap: balance;
}

.text {
  flex: 1;
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 1rem;

  @media (max-width: 767px) {
    flex: 1;
    width: 100%;
    align-items: flex-start;
  }
}

.cta {
  width: 100%;

  @media (max-width: 767px) {
    justify-content: flex-start;
  }
}

.headingHorizontal {
  flex-direction: row;
  justify-content: space-between;
  gap: 5rem;

  @media (max-width: 767px) {
    gap: var(--spacing-md);
  }

  :global(.portableTextContainer) {
    flex: 1;
  }

  .title {
    margin-bottom: 0;
  }

  @media (max-width: 768px) {
    flex-direction: column;
  }
}

.headingVertical {
  flex-direction: column;
  justify-content: flex-start;
}

.image {
  display: block;
  flex: 1;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  line-height: 0;

  img {
    width: 100%;
    height: auto;
  }
}

.videoWrapper {
  position: relative;
  width: 100%;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  border-radius: var(--radius-md);
  flex: 1;
}

.videoWrapper iframe,
.videoWrapper video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.default {
  display: block;

  img {
    border-radius: var(--radius-md);
  }
}

.maxWidth {
  margin: 0 auto;
  max-width: var(--max-width, var(--layout-width));

  img {
    border-radius: var(--radius-md);
  }
}

.fullBleed {
  width: 100%;
  max-width: unset;
  border-radius: var(--radius-md);
  overflow: hidden;
}

/* Style Options Override */
:global(.blog) .container {
  max-width: var(--blog-width);
}

:global(.centered) .heading {
  gap: var(--spacing-md);
  align-items: center;
  justify-content: center;
}

:global(.centered) .text {
  align-items: center;
}

:global(.centered) .cta {
  justify-content: center;
}

:global(.backgroundPrimary) {
  .text p,
  .text p a {
    color: #fff;
  }

  .metricValue {
    color: #fff;

    &:after {
      background-color: var(--color-secondary);
    }
  }

  .cta {
    .secondary {
      background-color: #fff;
    }
  }
}
